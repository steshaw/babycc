rm -f *.o superc
cc -g -Wall --std=c99    superc.c   -o superc
cc -g -Wall --std=c99   -c -o main.o main.c
expression 'int a void main(){a}' failed with:
Error: '=' expected.
int n void expression(){n=8+4} => 12
int n void expression(){n=8-4} => 4
int n void expression(){n=2*3} => 6
int n void expression(){n=6/2} => 3
int n void expression(){n=2+8*3} => 26
int n void expression(){n=(2+8)*3} => 30
int n void expression(){n=2*(3+4)} => 14
int n void expression(){n=((3+4)+(5-6))/(1+2)} => 2
int n void expression(){n=-1} => -1
int n void expression(){n=-(5-7)} => 2
int n int a int b void expression(){n=a*b} => 0
int n int a int b void expression(){n=a*b-b} => 0
int n void f(){n=101} void expression(){n=2*f()} => 202
int n void expression(){if 1 {n=4}} => 4
int n void expression(){if 1 {n=4} n=5} => 5
int n void expression(){if 1 n=4 else n=5} => 4
int n void expression(){n=10 while (n) { n = n - 1 }} => 0
int n void expression(){n=10 do { n = n - 1 } while (n)} => 0
expression 'int a int b void expression(){a=1 break b=2}' failed with:
Error: break statement not within loop.
int n void expression(){n=10 do { break } while (n)} => 10
int n void expression(){n=10 do { n=8 break } while (n)} => 8
int n void expression(){n=10 while n { break } } => 10
int n void expression(){n=10 while n { n=8 break } } => 8
int a int b void expression(){a=5 b=-a} => -5
int n void expression(){n=-10} => -10
int a int n void expression(){a=10 n = 5 - -a} => 15
int a int n void expression(){a=10 n = -5 - -a} => 5
int a void expression(){a=0 || 0} => 0
int a void expression(){a=0 || 2} => 1
int a void expression(){a=1 || 0} => 1
int a void expression(){a=10 || 20} => 1
int a void expression(){a=0 && 0} => 0
int a void expression(){a=0 && 99} => 0
int a void expression(){a=101 && 0} => 0
int a void expression(){a=88 && 78} => 1
int a void expression(){a = !0} => 1
int a void expression(){a = !99} => 0
int ifile void expression(){ifile = 1} => 1
int i int foo(){i=10} void expression(){i=foo()} => 10
int t int foo(){t=10} int expression(argc, argv) {t=foo()} => 10
int t int foo(a){t=10} int expression(argc, argv) {t=foo(1)} => 10
expression 'int t int foo(a){t=10} int expression(argc, argv) {t=foo(1,2)}' failed with:
Error: attempt call with incorrect number of arguments.
int a int b int foo(n) {a=n}void expression(){b = foo(9) a=a } => 9
int a                                      int b                                      int foo(n,m) {                             a = m                                  }                                          void expression() {                        b = foo(8,9)                           a = a                                  } => 9
